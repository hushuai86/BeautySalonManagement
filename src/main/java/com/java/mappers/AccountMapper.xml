<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java.dao.AccountMapper">
	<resultMap id="BaseResultMap" type="com.java.pojo.Account">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="login_id" property="loginId" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>
	<!--查看人员信息 -->
	<select id="selectAccount" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select * from account where login_id=#{loginId}
	</select>
	<!--查看所有人员信息 -->
	<select id="selectAllAccount" resultMap="BaseResultMap"
		parameterType="com.java.pojo.Account">
		select * from account where 1=1
		<if test="id!=null">
		and id=#{id}
		</if>
		<if test="loginId!=null">
		and login_id=#{loginId}
		</if>
		<if test="type!=null">
		and type=#{type}
		</if>
		<if test="status!=null">
		and status=#{status}
		</if>
	</select>
	<sql id="hairdresser_Column_List">
		account.id id, login_id loginId,status,hairdresser_info.id hairdresserId,code,pic_url,name,sex,phone,date_of_entry,base_charge,commission,hairdresser_status
	</sql>
	<!-- 查找美发师 -->
	<select id="selectHairdresser" resultType="java.util.Map"
		parameterType="java.util.Map">
		select <include refid="hairdresser_Column_List" /> from account,hairdresser_info where
		account.id=hairdresser_info.account_id
		<if test="code!=null">
			and hairdresser_info.code like
			CONCAT(CONCAT('%',#{code}),'%')
		</if>
		<if test="name!=null">
			and hairdresser_info.name like
			CONCAT(CONCAT('%',#{name}),'%')
		</if>
	</select>
	<sql id="user_Column_List">
		account.id id, login_id loginId,status,user_info.id userId,name,sex,phone,balance
	</sql>
	<!-- 查找会员 -->
	<select id="selectUser" resultType="java.util.Map"
		parameterType="java.util.Map">
		select 
		<include refid="user_Column_List" />
		from account,user_info where
		account.id=user_info.account_id
		<if test="name!=null">
			and user_info.name like
			CONCAT(CONCAT('%',#{name}),'%')
		</if>
		<if test="sex!=null">
			and account.sex =#{sex}
		</if>
		<if test="accountId!=null">
			and user_info.account_id like
			CONCAT(CONCAT('%',#{accountId}),'%')
		</if>
		<if test="phone!=null">
			and user_info.phone like
			CONCAT(CONCAT('%',#{phone}),'%')
		</if>
	</select>
	<!--修改用户信息表 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.java.pojo.Account">
		update account
		<set>
			<if test="loginId != null">
				login_id = #{loginId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<sql id="Base_Column_List">
		id, login_id, password, type, status
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from account
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		account
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.java.pojo.Account"
		useGeneratedKeys="true" keyProperty="id">
		insert into account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="loginId != null">
				login_id,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="status != null">
				status,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="loginId != null">
				#{loginId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.java.pojo.Account">
		update account
		set login_id = #{loginId,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		type = #{type,jdbcType=INTEGER},
		status =
		#{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>